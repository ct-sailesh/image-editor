const MyImageEditor=function(){let t=null,e=!1;class i{constructor(){this.connectToDOM(),this.initInternalState(),this.setupEventListeners()}connectToDOM(){this.canvas=document.getElementById("mainCanvas"),this.ctx=this.canvas.getContext("2d"),this.editCanvas=document.createElement("canvas"),this.editCtx=this.editCanvas.getContext("2d"),this.previewCanvas=document.getElementById("previewCanvas"),this.previewCtx=this.previewCanvas.getContext("2d"),this.logoUploadContainer=document.getElementById("logoUploadContainer"),this.blurToolOptions=document.getElementById("blurToolOptions")}initInternalState(){this.originalImage=null,this.currentImage=null,this.history=[],this.historyIndex=-1,this.maxHistory=20,this.currentTool=null,this.isDrawing=!1,this.isMovingLogo=!1,this.isResizingLogo=!1,this.startX=0,this.startY=0,this.blurAreas=[],this.blurStrength=10,this.logos=[],this.selectedLogo=null,this.resizeHandleSize=12}setupEventListeners(){document.querySelectorAll(".tool-btn[data-tool]").forEach((t=>t.addEventListener("click",(t=>this.selectTool(t.currentTarget.dataset.tool))))),this.canvas.addEventListener("mousedown",this.handleMouseDown.bind(this)),window.addEventListener("mousemove",this.handleMouseMove.bind(this)),window.addEventListener("mouseup",this.handleMouseUp.bind(this)),this.canvas.addEventListener("mouseleave",(()=>this.updateCursor("default")));const t=document.getElementById("logoUpload"),e=document.getElementById("logoInput");t.addEventListener("click",(()=>e.click())),t.addEventListener("dragover",(t=>{t.preventDefault(),t.currentTarget.classList.add("dragover")})),t.addEventListener("dragleave",(t=>t.currentTarget.classList.remove("dragover"))),t.addEventListener("drop",this.handleLogoDrop.bind(this)),e.addEventListener("change",this.handleLogoUpload.bind(this)),document.getElementById("blurStrength").addEventListener("input",(t=>{this.blurStrength=parseInt(t.target.value,10)})),document.getElementById("resetBtn").addEventListener("click",this.resetImage.bind(this)),document.getElementById("undoBtn").addEventListener("click",this.undo.bind(this)),document.addEventListener("keydown",(t=>{(t.ctrlKey||t.metaKey)&&"z"===t.key&&(t.preventDefault(),this.undo())}))}loadImage(t){return new Promise(((e,i)=>{const s=new Image;s.crossOrigin="anonymous",s.onload=()=>{this.originalImage=s,this.setImage(s,!0),e()},s.onerror=i,s.src=t}))}setImage(t,e=!1){this.currentImage=t,e&&(this.blurAreas=[],this.logos=[],this.selectedLogo=null),this.setupCanvases(),e&&this.saveState()}setImageAfterCrop(t){this.currentImage=t,this.editCanvas.width=t.width,this.editCanvas.height=t.height,this.blurAreas=[],this.logos=[],this.setupCanvases(),this.saveState()}resetImage(){confirm("Are you sure you want to discard all changes?")&&this.setImage(this.originalImage,!0)}setupCanvases(){this.editCanvas.width=this.currentImage.width,this.editCanvas.height=this.currentImage.height;const t=document.getElementById("canvasContainer").getBoundingClientRect(),e=t.width-40,i=t.height-40,s=this.currentImage.width/this.currentImage.height;let o=e,n=e/s;n>i&&(n=i,o=i*s),this.canvas.width=o,this.canvas.height=n,this.redraw()}redraw(){this.editCtx.clearRect(0,0,this.editCanvas.width,this.editCanvas.height),this.editCtx.drawImage(this.currentImage,0,0);const t=this.editCanvas.width/this.canvas.width,e=this.editCanvas.height/this.canvas.height;this.blurAreas.forEach((i=>this.applyBlur(this.editCtx,{x:i.x*t,y:i.y*e,width:i.width*t,height:i.height*e},i.strength))),this.logos.forEach((i=>this.editCtx.drawImage(i.image,i.x*t,i.y*e,i.width*t,i.height*e))),this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.drawImage(this.editCanvas,0,0,this.canvas.width,this.canvas.height),"logo"===this.currentTool&&this.selectedLogo&&this.drawLogoSelection(this.selectedLogo),this.updatePreview()}selectTool(t){const e=this.currentTool===t;this.currentTool&&document.querySelector(`.tool-btn[data-tool="${this.currentTool}"]`).classList.remove("active"),this.logoUploadContainer.style.display="none",this.blurToolOptions.style.display="none",this.canvas.style.cursor="default",this.selectedLogo=null,this.hideOverlays(),this.currentTool=e?null:t,this.currentTool&&(document.querySelector(`.tool-btn[data-tool="${this.currentTool}"]`).classList.add("active"),"logo"===this.currentTool&&(this.logoUploadContainer.style.display="flex"),"blur"===this.currentTool&&(this.blurToolOptions.style.display="flex"),"crop"===this.currentTool&&(this.canvas.style.cursor="crosshair")),this.redraw()}handleMouseDown(t){if(t.target!==this.canvas||!this.currentTool)return;const e=this.canvas.getBoundingClientRect();if(this.startX=t.clientX-e.left,this.startY=t.clientY-e.top,this.isDrawing=!0,"crop"===this.currentTool)this.showCropOverlay();else if("logo"===this.currentTool){if(this.selectedLogo){const t=this.getResizeHandleRect(this.selectedLogo);if(this.isPointInRect(this.startX,this.startY,t))return void(this.isResizingLogo=!0)}let t=!1;for(let e=this.logos.length-1;e>=0;e--)if(this.isPointInRect(this.startX,this.startY,this.logos[e]))return this.selectedLogo=this.logos[e],this.isMovingLogo=!0,t=!0,void this.redraw();t||(this.selectedLogo=null,this.redraw())}}handleMouseMove(t){const e=this.canvas.getBoundingClientRect(),i=t.clientX-e.left,s=t.clientY-e.top;if(this.isDrawing){if(this.isResizingLogo)this.resizeSelectedLogo(i,s);else if(this.isMovingLogo){const t=i-this.startX,e=s-this.startY;this.moveSelectedLogo(t,e),this.startX=i,this.startY=s}else if("crop"===this.currentTool)this.updateCropOverlay(this.startX,this.startY,i,s);else if("blur"===this.currentTool){this.redraw();const t={x:this.startX,y:this.startY,width:i-this.startX,height:s-this.startY};this.ctx.fillStyle="rgba(79, 70, 229, 0.3)",this.ctx.fillRect(t.x,t.y,t.width,t.height),this.ctx.strokeStyle="rgba(79, 70, 229, 0.8)",this.ctx.strokeRect(t.x,t.y,t.width,t.height)}}else this.updateCursor(i,s)}handleMouseUp(t){if(!this.isDrawing)return;this.isDrawing=!1,(this.isResizingLogo||this.isMovingLogo)&&this.saveState(),this.isMovingLogo=!1,this.isResizingLogo=!1;const e=this.canvas.getBoundingClientRect(),i=t.clientX-e.left,s=t.clientY-e.top;"crop"===this.currentTool?this.applyCrop(this.startX,this.startY,i,s):"blur"===this.currentTool&&this.addBlurArea(this.startX,this.startY,i,s)}updateCursor(t,e){if(this.isDrawing)return;let i="default";if("crop"===this.currentTool)i="crosshair";else if("logo"===this.currentTool){if(this.selectedLogo){const s=this.getResizeHandleRect(this.selectedLogo);this.isPointInRect(t,e,s)&&(i="se-resize")}if("default"===i)for(let s=this.logos.length-1;s>=0;s--)if(this.isPointInRect(t,e,this.logos[s])){i="move";break}}this.canvas.style.cursor=i}showCropOverlay(){document.getElementById("cropOverlay").style.display="block"}hideOverlays(){document.getElementById("cropOverlay").style.display="none"}updateCropOverlay(t,e,i,s){const o=document.getElementById("cropOverlay");o.style.left=this.canvas.offsetLeft+Math.min(t,i)+"px",o.style.top=this.canvas.offsetTop+Math.min(e,s)+"px",o.style.width=Math.abs(i-t)+"px",o.style.height=Math.abs(s-e)+"px"}applyCrop(t,e,i,s){this.hideOverlays();const o=Math.min(t,i),n=Math.min(e,s),a=Math.abs(i-t),r=Math.abs(s-e);if(a<10||r<10)return;const h=this.editCanvas.width/this.canvas.width,d=this.editCanvas.height/this.canvas.height;let l=Math.floor(o*h),c=Math.floor(n*d),g=Math.floor(a*h),u=Math.floor(r*d);l<0&&(l=0),c<0&&(c=0),l+g>this.editCanvas.width&&(g=this.editCanvas.width-l),c+u>this.editCanvas.height&&(u=this.editCanvas.height-c);const p=document.createElement("canvas");p.width=g,p.height=u;p.getContext("2d").drawImage(this.editCanvas,l,c,g,u,0,0,g,u);const v=new Image;v.onload=()=>this.setImageAfterCrop(v),v.src=p.toDataURL()}addBlurArea(t,e,i,s){const o={x:Math.min(t,i),y:Math.min(e,s),width:Math.abs(i-t),height:Math.abs(s-e),strength:this.blurStrength};o.width<5||o.height<5?this.redraw():(this.blurAreas.push(o),this.redraw(),this.saveState())}applyBlur(t,e,i){if(e.width<=0||e.height<=0)return;const s=document.createElement("canvas");s.width=e.width,s.height=e.height;const o=s.getContext("2d");o.drawImage(this.editCanvas,e.x,e.y,e.width,e.height,0,0,e.width,e.height),o.filter=`blur(${i}px)`,o.drawImage(s,0,0),t.drawImage(s,e.x,e.y)}handleLogoDrop(t){t.preventDefault(),t.currentTarget.classList.remove("dragover"),t.dataTransfer.files.length&&this.processLogoFile(t.dataTransfer.files[0])}handleLogoUpload(t){t.target.files.length&&this.processLogoFile(t.target.files[0]),t.target.value=""}processLogoFile(t){const e=new FileReader;e.onload=t=>{const e=new Image;e.onload=()=>{const t=Math.min(150,this.canvas.width/4),i=e.height/e.width,s={image:e,x:20,y:20,width:t,height:t*i,aspectRatio:i};this.logos.push(s),this.selectedLogo=s,this.redraw(),this.saveState()},e.src=t.target.result},e.readAsDataURL(t)}drawLogoSelection(t){this.ctx.strokeStyle="var(--primary-color)",this.ctx.lineWidth=2,this.ctx.strokeRect(t.x,t.y,t.width,t.height);const e=this.getResizeHandleRect(t);this.ctx.fillStyle="var(--primary-color)",this.ctx.fillRect(e.x,e.y,e.width,e.height)}moveSelectedLogo(t,e){this.selectedLogo&&(this.selectedLogo.x+=t,this.selectedLogo.y+=e,this.selectedLogo.x=Math.max(0,Math.min(this.selectedLogo.x,this.canvas.width-this.selectedLogo.width)),this.selectedLogo.y=Math.max(0,Math.min(this.selectedLogo.y,this.canvas.height-this.selectedLogo.height)),this.redraw())}resizeSelectedLogo(t,e){if(!this.selectedLogo)return;let i=Math.max(20,t-this.selectedLogo.x);this.selectedLogo.x+i>this.canvas.width&&(i=this.canvas.width-this.selectedLogo.x),this.selectedLogo.width=i,this.selectedLogo.height=i*this.selectedLogo.aspectRatio,this.redraw()}isPointInRect(t,e,i){return t>=i.x&&t<=i.x+i.width&&e>=i.y&&e<=i.y+i.height}getResizeHandleRect(t){const e=this.resizeHandleSize;return{x:t.x+t.width-e/2,y:t.y+t.height-e/2,width:e,height:e}}updatePreview(){this.previewCanvas.width=250,this.previewCanvas.height=this.editCanvas.height/this.editCanvas.width*250,this.previewCtx.drawImage(this.editCanvas,0,0,this.previewCanvas.width,this.previewCanvas.height)}saveState(){this.historyIndex<this.history.length-1&&(this.history=this.history.slice(0,this.historyIndex+1)),this.history.push({imageSrc:this.currentImage.src,blurAreas:JSON.parse(JSON.stringify(this.blurAreas)),logos:this.logos.map((t=>({...t,imageSrc:t.image.src})))}),this.history.length>this.maxHistory&&this.history.shift(),this.historyIndex=this.history.length-1,this.updateUndoButton()}async undo(){this.historyIndex<=0||(this.historyIndex--,await this.loadState(this.history[this.historyIndex]))}async loadState(t){const e=await new Promise((e=>{const i=new Image;i.crossOrigin="anonymous",i.onload=()=>e(i),i.src=t.imageSrc})),i=await Promise.all(t.logos.map((t=>new Promise((e=>{const i=new Image;i.crossOrigin="anonymous",i.onload=()=>e({...t,image:i}),i.src=t.imageSrc})))));this.currentImage=e,this.blurAreas=JSON.parse(JSON.stringify(t.blurAreas)),this.logos=i,this.setupCanvases(),this.updateUndoButton()}updateUndoButton(){document.getElementById("undoBtn").disabled=this.historyIndex<=0}downloadImage(){const t=document.createElement("a");t.download="edited-image.png",t.href=this.editCanvas.toDataURL("image/png"),t.click()}resetForNewLoad(){this.currentTool&&this.selectTool(this.currentTool),this.history=[],this.historyIndex=-1,this.updateUndoButton()}}return{open:function(s){!function(){if(e)return;const s=document.createElement("style");s.textContent='\n        :root {\n            --primary-color: #4f46e5; --primary-hover: #4338ca; --border-color: #e5e7eb;\n            --bg-light: #f9fafb; --bg-main: #f3f4f6; --text-dark: #111827; --text-light: #4b5563;\n        }\n        .image-editor-modal {\n            display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%;\n            background: rgba(0, 0, 0, 0.8); z-index: 10000; backdrop-filter: blur(8px);\n            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;\n        }\n        .image-editor-modal.active { display: flex; align-items: center; justify-content: center; }\n        .image-editor-modal * { box-sizing: border-box; }\n        .editor-container {\n            width: 95vw; height: 90vh; background: white; border-radius: 16px;\n            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.4); overflow: hidden; display: flex; flex-direction: column;\n        }\n        .editor-header {\n            padding: 12px 24px; border-bottom: 1px solid var(--border-color); display: flex; \n            justify-content: space-between; align-items: center; background: white; flex-shrink: 0;\n        }\n        .editor-title { font-size: 18px; font-weight: 600; color: var(--text-dark); }\n        .close-btn {\n            background: none; border: none; color: var(--text-light); width: 32px; height: 32px; border-radius: 50%; \n            cursor: pointer; display: flex; align-items: center; justify-content: center; transition: background-color 0.2s; font-size: 24px;\n        }\n        .close-btn:hover { background-color: var(--bg-main); }\n        .editor-toolbar {\n            padding: 8px 16px; border-bottom: 1px solid var(--border-color); background: var(--bg-light);\n            display: flex; flex-wrap: wrap; align-items: center; gap: 8px; flex-shrink: 0;\n        }\n        .tool-btn {\n            padding: 8px 14px; border: 1px solid transparent; background: none; border-radius: 8px; cursor: pointer;\n            transition: all 0.2s; font-size: 14px; font-weight: 500; display: flex; align-items: center; gap: 8px; color: var(--text-light);\n        }\n        .tool-btn:hover { background: #eef2ff; color: var(--primary-color); }\n        .tool-btn.active { background: var(--primary-color); color: white; }\n        .tool-btn:disabled { background: #e5e7eb; color: #9ca3af; cursor: not-allowed; }\n        .divider { width: 1px; height: 24px; background: var(--border-color); margin: 0 8px; }\n        .tool-options { display: none; align-items: center; gap: 8px; }\n        .tool-options label { font-size: 14px; color: var(--text-light); }\n        .tool-options input[type="range"] { accent-color: var(--primary-color); }\n        .upload-area {\n            border: 2px dashed var(--border-color); border-radius: 8px; padding: 12px; text-align: center;\n            cursor: pointer; transition: all 0.2s; color: var(--text-light);\n        }\n        .upload-area:hover, .upload-area.dragover { border-color: var(--primary-color); background: #eef2ff; }\n        .file-input { display: none; }\n        .editor-body { display: flex; flex: 1; min-height: 0; background: var(--bg-main); }\n        .canvas-container { flex: 1; position: relative; display: flex; align-items: center; justify-content: center; padding: 20px; overflow: hidden; }\n        #mainCanvas {\n            max-width: 100%; max-height: 100%; border-radius: 8px;\n            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -4px rgba(0, 0, 0, 0.1);\n            background: white; cursor: default;\n        }\n        #cropOverlay {\n            display: none; position: absolute; border: 1px solid white;\n            box-shadow: 0 0 0 9999px rgba(0, 0, 0, 0.5); pointer-events: none;\n        }\n        .preview-section {\n            width: 280px; background: white; border-left: 1px solid var(--border-color); padding: 24px;\n            display: flex; flex-direction: column; flex-shrink: 0;\n        }\n        .preview-title { font-size: 16px; font-weight: 600; margin-bottom: 16px; color: var(--text-dark); }\n        .preview-container {\n            flex: 1; background: var(--bg-main); border-radius: 8px; padding: 10px;\n            display: flex; align-items: center; justify-content: center; margin-bottom: 24px;\n        }\n        #previewCanvas { max-width: 100%; max-height: 100%; border-radius: 4px; }\n        .action-buttons { display: flex; flex-direction: column; gap: 12px; margin-top: auto; }\n        .btn { padding: 12px 20px; border: none; border-radius: 8px; cursor: pointer; font-weight: 500; transition: all 0.2s; font-size: 14px; }\n        .btn-primary { background: var(--primary-color); color: white; }\n        .btn-primary:hover { background: var(--primary-hover); }\n        .btn-secondary { background: #e5e7eb; color: #374151; }\n        .btn-secondary:hover { background: #d1d5db; }\n    ',document.head.appendChild(s);const o=document.createElement("div");o.innerHTML='\n        <div id="imageEditorModal" class="image-editor-modal">\n            <div class="editor-container">\n                <div class="editor-header">\n                    <h2 class="editor-title">Image Editor</h2>\n                    <button class="close-btn" onclick="MyImageEditor.close()">&times;</button>\n                </div>\n                \n                <div class="editor-toolbar">\n                    <button class="tool-btn" data-tool="crop">📐 Crop</button>\n                    <button class="tool-btn" data-tool="blur">🌀 Blur</button>\n                    <button class="tool-btn" data-tool="logo">🖼️ Logo</button>\n                    <div class="divider"></div>\n                    <div id="logoUploadContainer" class="tool-options">\n                        <div class="upload-area" id="logoUpload">\n                            Click or drop new logo\n                            <input type="file" class="file-input" id="logoInput" accept="image/*">\n                        </div>\n                    </div>\n                    <div id="blurToolOptions" class="tool-options">\n                        <label for="blurStrength">Strength:</label>\n                        <input type="range" id="blurStrength" min="2" max="30" value="10" step="1">\n                    </div>\n                </div>\n\n                <div class="editor-body">\n                    <div class="canvas-container" id="canvasContainer">\n                        <canvas id="mainCanvas"></canvas>\n                        <div id="cropOverlay"></div>\n                    </div>\n\n                    <div class="preview-section">\n                        <h3 class="preview-title">Preview</h3>\n                        <div class="preview-container"><canvas id="previewCanvas"></canvas></div>\n                        <div class="action-buttons">\n                            <button class="btn btn-primary" onclick="MyImageEditor.download()">Download Image</button>\n                            <button class="tool-btn" id="undoBtn" disabled style="justify-content: center;">↶ Undo</button>\n                            <button class="tool-btn" id="resetBtn" style="justify-content: center;">🔄 Reset All</button>\n                            <button class="btn btn-secondary" onclick="MyImageEditor.close()">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ',document.body.appendChild(o.firstElementChild),t=new i,e=!0}();document.getElementById("imageEditorModal").classList.add("active"),t.resetForNewLoad(),t.loadImage(s).catch((t=>{console.error("Failed to load image:",t),alert("Failed to load the image. Please check the URL and browser console."),this.close()}))},close:function(){if(!e)return;document.getElementById("imageEditorModal").classList.remove("active")},download:function(){t&&t.downloadImage()}}}();